'''
PROBLEM 2:

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

'''

def run():
	maximum = 4000000
	a = 1
	b = 2
	sum = advance_step(a,b,maximum)
	print("Sum is {}".format(sum))


def advance_step(a,b,maximum):
	if b > maximum:
		if a % 2 == 0:
			return a
		else:
			return 0
	else:
		print("{}, {}".format(a,b))
		sum = advance_step(b, a+b, maximum)
		if a % 2 == 0:
			return sum + a
		else:
			return sum


if __name__ == '__main__':
	run()